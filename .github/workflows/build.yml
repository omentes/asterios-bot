name: Actions

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
#      mysql:
#        image: mysql:5.7
#        env:
#          MYSQL_ROOT_PASSWORD: password
#          MYSQL_DATABASE: test_db
#        ports:
#          - 32574:3306
#        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Composer validate
        run: composer validate

      - name: Composer Install
        run: composer install --dev --no-interaction --no-ansi --prefer-dist --no-suggest --ignore-platform-reqs

      - name: PHPCS check
        run: php vendor/bin/phpcs --standard=psr12 app/ -n

      - name: Create env file
        run: |
          cp .env.github.actions .env

      - name: Prepare Codeception config
        run: |
          sed -i 's/mysql:host=mysql;port=3306;/mysql:host=0.0.0.0;port=32574;/g' tests/unit.suite.yml
      - name: Build the docker-compose stack
        run: docker-compose up -d
      - name: Sleep
        uses: jakejarvis/wait-action@master
        with:
          time: '60s'
      - name: Check running containers
        run: docker ps
      - name: Run test suite
        run: make test
#
#      - name: Run unit tests
#        run: |
#          ./vendor/bin/codecept run unit
